name: Conviso Security Gate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate-security:
    runs-on: ubuntu-latest

    env:
      REPO_SHORT_NAME: Vulnerable-Web-Application
      BLOCKED_CWES: ["CWE-94", "CWE-259"]
      CONVISO_API_KEY: ${{ secrets.CONVISO_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Buscar ID do Asset pela API da Conviso
        run: |
          echo "Buscando asset com nome: $REPO_SHORT_NAME"

          QUERY=$(jq -n --arg filterName "$REPO_SHORT_NAME" '{
            query: "query($filterName:String) { assets(companyId: 843, filters: {name: $filterName}, pagination: {page:1, perPage:1}) { collection { id name } } }",
            variables: { filterName: $filterName }
          }')

          RESPONSE=$(curl -s -X POST https://app.convisoappsec.com/graphql \
            -H "Authorization: Bearer $CONVISO_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$QUERY")

          ASSET_ID=$(echo "$RESPONSE" | jq -r '.data.assets.collection[0].id')

          if [ "$ASSET_ID" = "null" ] || [ -z "$ASSET_ID" ]; then
            echo "❌ Asset não encontrado para o repo $REPO_SHORT_NAME"
            exit 1
          fi

          echo "✅ Asset encontrado: ID=$ASSET_ID"
          echo "ASSET_ID=$ASSET_ID" >> $GITHUB_ENV

      - name: Validar vulnerabilidades por CWE bloqueadas
        run: |
          echo "Validando asset $ASSET_ID para CWEs bloqueados: $BLOCKED_CWES"

          QUERY=$(jq -n --argjson assetIds "[$ASSET_ID]" '{
            query: "query($assetIds:[Int!]) { issues(companyId: 843, pagination: {page:1, perPage:100}, filters: {assetIds: $assetIds}) { collection { id title severity category asset { id name } } } }",
            variables: { assetIds: $assetIds }
          }')

          RESPONSE=$(curl -s -X POST https://app.convisoappsec.com/graphql \
            -H "Authorization: Bearer $CONVISO_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$QUERY")

          BLOCKED_ISSUES=$(echo "$RESPONSE" | jq -c --argjson blockedCwes "$BLOCKED_CWES" '
            .data.issues.collection | map(select(.category as $c | $blockedCwes | index($c)))')

          if [ "$(echo "$BLOCKED_ISSUES" | jq length)" -gt 0 ]; then
            echo "❌ Ativo NÃO está conforme: foram encontradas vulnerabilidades CWE bloqueadas:"
            echo "$BLOCKED_ISSUES" | jq
            exit 1
          else
            echo "✅ Ativo está conforme, sem vulnerabilidades CWE bloqueadas."
          fi
